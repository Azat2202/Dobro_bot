from random import randint, choice

from aiogram import types
from aiogram.dispatcher import filters
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from commands.truth_or_dare import get_dare, get_truth
from database.UsersDatabaseManager import UsersDatabaseManager
from loader import dp, bot


@dp.message_handler(commands="help")
async def help_(message: types.Message):
    await message.reply(
        """
–°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
/start - –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —á–∞—Ç–∞
/help - –≤—ã–≤–µ—Å—Ç–∏ —Å–ø—Ä–∞–≤–∫—É –ø–æ –≤—Å–µ–º –∫–æ–º–∞–Ω–¥–∞–º
/marry - –∑–∞–∫–ª—é—á–∏—Ç—å –±—Ä–∞–∫ —Å —á–µ–ª–æ–≤–µ–∫–æ–º –∏–∑ —á–∞—Ç–∞
/divorce - —Ä–∞–∑–≤–µ—Å—Ç–∏—Å—å
/marriages - –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –±—Ä–∞–∫–∏
/sex - –∑–∞–Ω—è—Ç—å—Å—è —Å–µ–∫—Å–æ–º —Å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º —á–∞—Ç–∞
/my_sex - –ø–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –ø–æ–ª–æ–≤—ã—Ö —Å–≤—è–∑–µ–π
/adopt - –ø—Ä–∏—é—Ç–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞
/abandon - –æ—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç —Ä–µ–±–µ–Ω–∫–∞
/escape - —É–±–µ–∂–∞—Ç—å –æ—Ç —Ä–æ–¥–∏—Ç–µ–ª–µ–π
/family - —Å–µ–º–µ–π–Ω–æ–µ –¥—Ä–µ–≤–æ —á–∞—Ç–∞
/my_mood - –≥—Ä–∞—Ñ–∏–∫ –º–æ–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
/anek - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –∞–Ω–µ–∫–¥–æ—Ç
/horo - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –≥–æ—Ä–æ—Å–∫–æ–ø
/horo_for_all - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–æ—Ä–æ—Å–∫–æ–ø –¥–ª—è –≤—Å–µ—Ö
/wish - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–∂–µ–ª–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å
/truth - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –ø—Ä–∞–≤–¥—ã
/dare - –ø–æ–ª—É—á–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–µ
/mark_all - –æ—Ç–º–µ—Ç–∏—Ç—å –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
/top_spamers  - —Ç–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º
/top_karma - —Ç–æ–ø —É—á–∞—Ç–Ω–∏–∫–æ–≤ –ø–æ –∫–∞—Ä–º–µ
–í–∞–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å ... - –ó–∞–¥–∞—Ç—å –≤–∞–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å
–í–æ–ø—Ä–æ—Å ... - –ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å –¥–∞/–Ω–µ—Ç
–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å ... - –£–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å —á–µ–ª–æ–≤–µ–∫–æ–º
–¥–æ–±—Ä—è—à –∏–ª–∏ –ø–ª—é—Å –∏–ª–∏ –°–ø–∞—Å–∏–±–æ - –ü–æ–≤—ã—Å–∏—Ç—å –∫–∞—Ä–º—É 
–º–∏–Ω—É—Å –∏–ª–∏ —Ç–æ–∫—Å - –ü–æ–Ω–∏–∑–∏—Ç—å –∫–∞—Ä–º—É
–ù–∞—Å—Ç—Ä–æ–π–∫–∏:
/settings_poll_creation - –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –æ–ø—Ä–æ—Å–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
    )


@dp.message_handler(filters.Text(startswith="–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å", ignore_case=True))
async def connection(message: types.Message):
    await message.reply(f"–¢—ã –∏ {message.text[14::]} –≤–º–µ—Å—Ç–µ —Å —à–∞–Ω—Å–æ–º {randint(0, 100)}%")


@dp.message_handler(filters.Text(startswith="–í–æ–ø—Ä–æ—Å", ignore_case=True))
async def yn(message: types.Message):
    await message.reply(choice(["–î–∞", "–ù–µ—Ç"]))


@dp.message_handler(commands="truth")
async def truth(message: types.Message, by_command=True):
    inline_kb = InlineKeyboardMarkup()
    inline_kb.add(
        InlineKeyboardButton(
            "üîÑ", callback_data=f"truth_update {message.from_user.id}"
        ),
        InlineKeyboardButton(
            "‚úÖ", callback_data=f"remove_markup {message.from_user.id}"
        ),
    )
    if by_command:
        await message.reply(get_truth(), reply_markup=inline_kb)
    else:
        await bot.edit_message_text(
            get_truth(),
            message.chat.id,
            message.message_id,
            reply_markup=message.reply_markup,
        )


@dp.callback_query_handler(lambda c: c.data[:12] == "truth_update")
async def marriage_refused(call: types.CallbackQuery):
    if call.from_user.id != int(call.data.split()[1]):
        await call.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å!")
    else:
        await truth(call.message, False)
        await call.answer()


@dp.callback_query_handler(lambda c: c.data[:13] == "remove_markup")
async def marriage_refused(call: types.CallbackQuery):
    if call.from_user.id != int(call.data.split()[1]):
        await call.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –≤—ã–±–æ—Ä!")
    else:
        await call.message.edit_reply_markup(reply_markup=None)
        await call.answer()


@dp.message_handler(commands="dare")
async def dare(message: types.Message, by_command=True):
    inline_kb = InlineKeyboardMarkup()
    inline_kb.add(
        InlineKeyboardButton("üîÑ", callback_data=f"dare_update {message.from_user.id}"),
        InlineKeyboardButton(
            "‚úÖ", callback_data=f"remove_markup {message.from_user.id}"
        ),
    )
    if by_command:
        await message.reply(get_dare(), reply_markup=inline_kb)
    else:
        await bot.edit_message_text(
            get_dare(),
            message.chat.id,
            message.message_id,
            reply_markup=message.reply_markup,
        )


@dp.callback_query_handler(lambda c: c.data[:11] == "dare_update")
async def marriage_refused(call: types.CallbackQuery):
    if call.from_user.id != int(call.data.split()[1]):
        await call.answer("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å!")
    else:
        await dare(call.message, False)
        await call.answer()


@dp.message_handler(filters.Text(startswith="–í–∞–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å", ignore_case=True))
async def yn_important(message: types.Message):
    await message.reply(
        choice(
            [
                "–î–∞",
                "–ù–µ—Ç",
                "–≠—Ç–æ –Ω–µ –≤–∞–∂–Ω–æ",
                "–£—Å–ø–æ–∫–æ–π—Å—è",
                "–ù–µ —Å–ø—Ä–∞—à–∏–≤–∞–π —Ç–∞–∫–æ–µ",
                "–î–∞, —Ö–æ—Ç—è –∑—Ä—è",
                "–ù–∏–∫–æ–≥–¥–∞",
                "100%",
                "1 –∏–∑ 100",
                "–°–ø—Ä–æ—Å–∏ –µ—â–µ —Ä–∞–∑",
            ]
        )
    )
